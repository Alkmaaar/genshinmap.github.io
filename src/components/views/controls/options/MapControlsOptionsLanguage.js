/**
 * Provides the interface for the language selector
 * in the Options tab of the map controls.
 */

import { MenuItem, Select as MaterialSelect } from '@material-ui/core';
import clsx from 'clsx';
import React from 'react';
import { connect } from 'react-redux';
import Flag from 'react-world-flags';

import { getLanguageOptions } from '~/components/i18n/FeatureLocalization';
import { getShortLocale, t } from '~/components/i18n/Localization';
import { useImageExtension } from '~/components/interface/Image';
import { setOverrideLang } from '~/redux/ducks/options';

import './MapControlsOptionsLanguage.css';

/**
 * Renders the current value of the Language.
 * @param {*} value The locale code.
 * @param {*} label The locale name.
 * @param {*} context 'menu' or 'value'
 * @param {*} inputValue
 * @param {*} selectValue
 */
const formatFlag = (value) => {
  let flagCode = value;
  // Flag overrides.
  switch (flagCode) {
    case 'en':
      // 'en' should display the United States flag.
      flagCode = 'us';
      break;
    case 'ko':
      // 'ko' should display the South Korean flag.
      flagCode = 'kr';
      break;
    case 'zh':
      // 'zh' should display the Chinese flag.
      flagCode = 'cn';
      break;
    default:
      // No override.
      break;
  }
  return (
    <Flag
      code={flagCode}
      height={16}
      width={30}
      className={clsx('map-controls-options-language-flag')}
    />
  );
};

// Note: The dispatchers generated by mapDispatchToProps
// shadow their associated action generators.
/* eslint-disable no-shadow */
const _MapControlsOptionsLanguage = ({ options, setOverrideLang }) => {
  const ext = useImageExtension();

  const langOptions = getLanguageOptions();
  const currentLangCode =
    (options?.overrideLang ?? '') !== '' ? options.overrideLang : getShortLocale();

  return (
    <div
      className={clsx('map-controls-options-container', `map-controls-options-container-${ext}`)}
    >
      <div className={clsx('map-controls-option')}>
        <span className={clsx('map-controls-option-label')}>{t('options-language')}</span>
        <MaterialSelect
          value={currentLangCode}
          onChange={(event) => setOverrideLang(event.target.value)}
        >
          {langOptions.map((lang) => (
            <MenuItem value={lang.value}>
              {formatFlag(lang.value)}
              {lang.label}
            </MenuItem>
          ))}
        </MaterialSelect>
      </div>
    </div>
  );
};

const mapStateToProps = (state) => ({
  options: state.options,
});
const mapDispatchToProps = (dispatch) => ({
  setOverrideLang: (lang) => dispatch(setOverrideLang(lang)),
});
const MapControlsOptionsLanguage = connect(
  mapStateToProps,
  mapDispatchToProps
)(_MapControlsOptionsLanguage);

export default MapControlsOptionsLanguage;
